{"ast":null,"code":"var _jsxFileName = \"/home/mojtaba/Desktop/Burgur_Builder/burgur_builder/src/containers/Counter/Counter.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport CounterControl from '../../components/CounterControl/CounterControl';\nimport CounterOutput from '../../components/CounterOutput/CounterOutput';\n\nclass Counter extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      counter: 0\n    };\n\n    this.counterChangedHandler = (action, value) => {\n      switch (action) {\n        case 'inc':\n          this.setState(prevState => {\n            return {\n              counter: prevState.counter + 1\n            };\n          });\n          break;\n\n        case 'dec':\n          this.setState(prevState => {\n            return {\n              counter: prevState.counter - 1\n            };\n          });\n          break;\n\n        case 'add':\n          this.setState(prevState => {\n            return {\n              counter: prevState.counter + value\n            };\n          });\n          break;\n\n        case 'sub':\n          this.setState(prevState => {\n            return {\n              counter: prevState.counter - value\n            };\n          });\n          break;\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(CounterOutput, {\n      value: this.props.ctr,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }), React.createElement(CounterControl, {\n      label: \"Increment\",\n      clicked: this.props.onIncrementCounter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }), React.createElement(CounterControl, {\n      label: \"Decrement\",\n      clicked: this.props.onDecrementCounter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), React.createElement(CounterControl, {\n      label: \"Add 10\",\n      clicked: this.props.onAddCounter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), React.createElement(CounterControl, {\n      label: \"Subtract 15\",\n      clicked: this.props.onSubtractCounter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.props.onStoreResult,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"Store Result\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, this.props.storedResults.map(str), React.createElement(\"li\", {\n      onClick: this.props.onDeleteResult,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \" \")));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    ctr: state.counter,\n    storedResults: state.result\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onIncrementCounter: () => {\n      dispatch({\n        type: 'INCREMENT'\n      });\n    },\n    onDecrementCounter: () => {\n      dispatch({\n        type: 'DECREMENT'\n      });\n    },\n    onAddCounter: () => {\n      dispatch({\n        type: 'ADD',\n        val: 10\n      });\n    },\n    onSubtractCounter: () => {\n      dispatch({\n        type: 'SUBTRACT',\n        val: 15\n      });\n    },\n    onStoreResult: () => dispatch({\n      type: 'STORE_RESULT'\n    }),\n    onDeleteResult: () => dispatch({\n      type: 'DELETE_RESULT'\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Counter);","map":{"version":3,"sources":["/home/mojtaba/Desktop/Burgur_Builder/burgur_builder/src/containers/Counter/Counter.js"],"names":["React","Component","connect","CounterControl","CounterOutput","Counter","state","counter","counterChangedHandler","action","value","setState","prevState","render","props","ctr","onIncrementCounter","onDecrementCounter","onAddCounter","onSubtractCounter","onStoreResult","storedResults","map","str","onDeleteResult","mapStateToProps","result","mapDispatchToProps","dispatch","type","val"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport CounterControl from '../../components/CounterControl/CounterControl';\nimport CounterOutput from '../../components/CounterOutput/CounterOutput';\n\nclass Counter extends Component {\n    state = {\n        counter: 0\n    }\n    counterChangedHandler = (action, value) => {\n        switch (action) {\n            case 'inc':\n                this.setState((prevState) => { return { counter: prevState.counter + 1 } })\n                break;\n            case 'dec':\n                this.setState((prevState) => { return { counter: prevState.counter - 1 } })\n                break;\n            case 'add':\n                this.setState((prevState) => { return { counter: prevState.counter + value } })\n                break;\n            case 'sub':\n                this.setState((prevState) => { return { counter: prevState.counter - value } })\n                break;\n        }\n    }\n    render() {\n        return (\n            <div>\n                <CounterOutput value={this.props.ctr} />\n                <CounterControl label=\"Increment\" clicked={this.props.onIncrementCounter} />\n                <CounterControl label=\"Decrement\" clicked={this.props.onDecrementCounter} />\n                <CounterControl label=\"Add 10\" clicked={this.props.onAddCounter} />\n                <CounterControl label=\"Subtract 15\" clicked={this.props.onSubtractCounter} />\n                <hr />\n                <button onClick={this.props.onStoreResult}>Store Result</button>\n                <ul>\n                    {this.props.storedResults.map(str)}\n                    <li onClick={this.props.onDeleteResult}> </li>\n                </ul>\n            </div>\n        );\n    }\n}\nconst mapStateToProps = state => {\n    return {\n        ctr: state.counter,\n        storedResults: state.result,\n\n    };\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n        onIncrementCounter: () => {\n            dispatch({ type: 'INCREMENT' })\n        },\n        onDecrementCounter: () => {\n            dispatch({ type: 'DECREMENT' })\n        },\n        onAddCounter: () => {\n            dispatch({ type: 'ADD', val: 10 })\n        },\n        onSubtractCounter: () => {\n            dispatch({ type: 'SUBTRACT', val: 15 })\n        },\n        onStoreResult: () => dispatch({ type: 'STORE_RESULT' }),\n        onDeleteResult: () => dispatch({ type: 'DELETE_RESULT' }),\n\n    };\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Counter);"]},"metadata":{},"sourceType":"module"}