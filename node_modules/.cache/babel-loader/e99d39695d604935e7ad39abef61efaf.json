{"ast":null,"code":"import _defineProperty from \"/home/mojtaba/Desktop/Burgur_Builder/burgur_builder/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/mojtaba/Desktop/Burgur_Builder/burgur_builder/src/containers/BurgerBuilder/BurgerBuilder.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport Aux from '../../hoc/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nconst INGREDIENT_PRICE = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7\n};\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: {\n        salad: 0,\n        bacon: 0,\n        cheese: 0,\n        meat: 0\n      },\n      totalPrice: 4,\n      purchaseable: false\n    };\n\n    this.addIngredientHanlder = type => {\n      const oldCount = this.state.ingredients[type];\n      const updateCounted = oldCount + 1;\n\n      const updatedIngredients = _objectSpread({}, this.state.ingredients);\n\n      updatedIngredients[type] = updateCounted;\n      const priceAddition = INGREDIENT_PRICE[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice + priceAddition;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.removeIngredientHanlder = type => {\n      const oldCount = this.state.ingredients[type];\n\n      if (oldCount <= 0) {\n        return;\n      }\n\n      const updateCounted = oldCount - 1;\n\n      const updatedIngredients = _objectSpread({}, this.state.ingredients);\n\n      updatedIngredients[type] = updateCounted;\n      const priceDeduction = INGREDIENT_PRICE[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice - priceDeduction;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n  }\n\n  updatePurchaseState(updatedIngredients) {\n    const ingredients = _objectSpread({}, this.state.ingredients);\n\n    const sum = Object.keys(ingredients).map(igKey => {\n      return ingredients[igKey];\n    }).reduce((sum, el) => {\n      console.log(el);\n      return sum + el;\n    }, 0);\n    console.log(sum);\n    this.setState({\n      purchaseable: sum > 0\n    });\n  }\n\n  render() {\n    const disableInfo = _objectSpread({}, this.state.ingredients);\n\n    for (let key in disableInfo) {\n      disableInfo[key] = disableInfo[key] <= 0;\n    }\n\n    return React.createElement(Aux, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(Burger, {\n      ingredients: this.state.ingredients,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(BuildControls, {\n      ingredientAdded: this.addIngredientHanlder,\n      ingredientRemoved: this.removeIngredientHanlder,\n      disable: disableInfo,\n      purchaseable: this.state.purchaseable,\n      price: this.state.totalPrice,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default BurgerBuilder;","map":{"version":3,"sources":["/home/mojtaba/Desktop/Burgur_Builder/burgur_builder/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","Aux","Burger","BuildControls","INGREDIENT_PRICE","salad","cheese","meat","bacon","BurgerBuilder","state","ingredients","totalPrice","purchaseable","addIngredientHanlder","type","oldCount","updateCounted","updatedIngredients","priceAddition","oldPrice","newPrice","setState","updatePurchaseState","removeIngredientHanlder","priceDeduction","sum","Object","keys","map","igKey","reduce","el","console","log","render","disableInfo","key"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Aux from '../../hoc/Aux'\nimport Burger from '../../components/Burger/Burger'\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls'\n\nconst INGREDIENT_PRICE = {\n    salad: 0.5,\n    cheese: 0.4,\n    meat: 1.3,\n    bacon: 0.7\n}\n\nclass BurgerBuilder extends Component {\n    state = {\n        ingredients: {\n            salad: 0,\n            bacon: 0,\n            cheese: 0,\n            meat: 0,\n        },\n        totalPrice: 4,\n        purchaseable: false\n    }\n    updatePurchaseState(updatedIngredients) {\n        const ingredients = {\n            ...this.state.ingredients\n        };\n        const sum = Object.keys(ingredients)\n            .map(igKey => {\n                return ingredients[igKey];\n            }).reduce((sum, el) => {\n                console.log(el);\n                \n                return sum + el;\n            }, 0);\n            console.log(sum);\n            \n        this.setState({\n            purchaseable: sum > 0\n        });\n    }\n\n    addIngredientHanlder = (type) => {\n        const oldCount = this.state.ingredients[type];\n        const updateCounted = oldCount + 1;\n        const updatedIngredients = {\n            ...this.state.ingredients\n        };\n        updatedIngredients[type] = updateCounted;\n        const priceAddition = INGREDIENT_PRICE[type];\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice + priceAddition;\n        this.setState({\n            totalPrice: newPrice,\n            ingredients: updatedIngredients\n        });\n        this.updatePurchaseState(updatedIngredients);\n\n    }\n    removeIngredientHanlder = (type) => {\n        const oldCount = this.state.ingredients[type];\n\n        if (oldCount <= 0) {\n            return;\n        }\n        const updateCounted = oldCount - 1;\n        const updatedIngredients = {\n            ...this.state.ingredients\n        };\n        updatedIngredients[type] = updateCounted;\n        const priceDeduction = INGREDIENT_PRICE[type];\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice - priceDeduction;\n        this.setState({\n            totalPrice: newPrice,\n            ingredients: updatedIngredients\n        });\n        this.updatePurchaseState(updatedIngredients);\n    }\n    render() {\n        const disableInfo = {\n            ...this.state.ingredients\n        }\n        for (let key in disableInfo) {\n            disableInfo[key] = disableInfo[key] <= 0\n        }\n\n        return (\n            <Aux>\n                <Burger ingredients={this.state.ingredients} />\n                <BuildControls\n                    ingredientAdded={this.addIngredientHanlder}\n                    ingredientRemoved={this.removeIngredientHanlder}\n                    disable={disableInfo}\n                    purchaseable={this.state.purchaseable}\n                    price={this.state.totalPrice} />\n            </Aux>\n        );\n    }\n}\nexport default BurgerBuilder;"]},"metadata":{},"sourceType":"module"}