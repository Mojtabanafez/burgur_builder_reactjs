{"ast":null,"code":"import _defineProperty from \"/home/mojtaba/Desktop/Burgur_Builder/burgur_builder/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/mojtaba/Desktop/Burgur_Builder/burgur_builder/src/containers/BurgerBuilder/BurgerBuilder.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport Aux from '../../hoc/Aux/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport axios from '../../axios-orders';\nimport { connect } from 'react-redux';\nimport * as burgerBuilderActions from '../../store/actions/index';\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      purchasing: false,\n      loading: false,\n      error: false\n    };\n\n    this.purchaseHandler = () => {\n      this.setState({\n        purchasing: true\n      });\n    };\n\n    this.purchaseCancelHandler = () => {\n      this.setState({\n        purchasing: false\n      });\n    };\n\n    this.purchaseContinueHandler = () => {\n      // const queryParams = [];\n      // for (let i in this.state.ingredients) {\n      //     queryParams.push(encodeURIComponent(i) + '=' + encodeURIComponent(this.state.ingredients[i]));\n      // }\n      // queryParams.push('price=' + this.state.totalPrice);\n      // queryParams.push('price=' + this.state.totalPrice);\n      // const queryString = queryParams.join('&');\n      // this.props.history.push({\n      //     pathname: '/checkout',\n      //     search: '?' + queryString\n      // });\n      this.props.history.push('/checkout');\n    };\n  }\n\n  componentDidMount() {// console.log(this.props);\n    // axios.get( '/ingredients.json' )\n    //     .then( response => {\n    //         this.setState( { ingredients: response.data } );\n    //     } )\n    //     .catch( error => {\n    //         this.setState( { error: true } );\n    //     } );\n  }\n\n  updatePurchaseState(ingredients) {\n    const sum = Object.keys(ingredients).map(igKey => {\n      return ingredients[igKey];\n    }).reduce((sum, el) => {\n      return sum + el;\n    }, 0);\n    return sum > 0;\n  }\n\n  render() {\n    const disabledInfo = _objectSpread({}, this.props.ings);\n\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n\n    let orderSummary = null;\n    let burger = this.state.error ? React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Ingredients can't be loaded!\") : React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    });\n\n    if (this.props.ings) {\n      burger = React.createElement(Aux, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(Burger, {\n        ingredients: this.props.ings,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }), React.createElement(BuildControls, {\n        ingredientAdded: this.props.onIngredientAdded,\n        ingredientRemoved: this.props.onIngredientRemoved,\n        disabled: disabledInfo,\n        purchasable: this.updatePurchaseState(this.props.ings),\n        ordered: this.purchaseHandler,\n        price: this.props.price,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }));\n      orderSummary = React.createElement(OrderSummary, {\n        ingredients: this.props.ings,\n        price: this.props.price,\n        purchaseCancelled: this.purchaseCancelHandler,\n        purchaseContinued: this.purchaseContinueHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      });\n    }\n\n    if (this.state.loading) {\n      orderSummary = React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(Aux, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      show: this.state.purchasing,\n      modalClosed: this.purchaseCancelHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, orderSummary), burger);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onIngredientAdded: ingName => dispatch({\n      type: actionType.ADD_INGREDIENTS,\n      ingredientName: ingName\n    }),\n    onIngredientRemoved: ingName => dispatch({\n      type: actionType.REMOVE_INGREDIENTS,\n      ingredientName: ingName\n    })\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    ings: state.ingredients,\n    price: state.totalPrice\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));","map":{"version":3,"sources":["/home/mojtaba/Desktop/Burgur_Builder/burgur_builder/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","Aux","Burger","BuildControls","Modal","OrderSummary","Spinner","withErrorHandler","axios","connect","burgerBuilderActions","BurgerBuilder","state","purchasing","loading","error","purchaseHandler","setState","purchaseCancelHandler","purchaseContinueHandler","props","history","push","componentDidMount","updatePurchaseState","ingredients","sum","Object","keys","map","igKey","reduce","el","render","disabledInfo","ings","key","orderSummary","burger","onIngredientAdded","onIngredientRemoved","price","mapDispatchToProps","dispatch","ingName","type","actionType","ADD_INGREDIENTS","ingredientName","REMOVE_INGREDIENTS","mapStateToProps","totalPrice"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Aux from '../../hoc/Aux/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport axios from '../../axios-orders';\nimport { connect } from 'react-redux';\nimport * as burgerBuilderActions from '../../store/actions/index'\n\n\nclass BurgerBuilder extends Component {\n\n    state = {\n        purchasing: false,\n        loading: false,\n        error: false\n    }\n\n    componentDidMount() {\n        // console.log(this.props);\n        // axios.get( '/ingredients.json' )\n        //     .then( response => {\n        //         this.setState( { ingredients: response.data } );\n        //     } )\n        //     .catch( error => {\n        //         this.setState( { error: true } );\n        //     } );\n    }\n\n    updatePurchaseState(ingredients) {\n        const sum = Object.keys(ingredients)\n            .map(igKey => {\n                return ingredients[igKey];\n            })\n            .reduce((sum, el) => {\n                return sum + el;\n            }, 0);\n        return sum > 0;\n    }\n\n    purchaseHandler = () => {\n        this.setState({ purchasing: true });\n    }\n\n    purchaseCancelHandler = () => {\n        this.setState({ purchasing: false });\n    }\n\n    purchaseContinueHandler = () => {\n        // const queryParams = [];\n        // for (let i in this.state.ingredients) {\n        //     queryParams.push(encodeURIComponent(i) + '=' + encodeURIComponent(this.state.ingredients[i]));\n        // }\n        // queryParams.push('price=' + this.state.totalPrice);\n        // queryParams.push('price=' + this.state.totalPrice);\n        // const queryString = queryParams.join('&');\n        // this.props.history.push({\n        //     pathname: '/checkout',\n        //     search: '?' + queryString\n        // });\n        this.props.history.push('/checkout');\n    }\n\n    render() {\n        const disabledInfo = {\n            ...this.props.ings\n        };\n        for (let key in disabledInfo) {\n            disabledInfo[key] = disabledInfo[key] <= 0\n        }\n\n        let orderSummary = null;\n        let burger = this.state.error ? <p>Ingredients can't be loaded!</p> : <Spinner />;\n\n        if (this.props.ings) {\n            burger = (\n                <Aux>\n                    <Burger ingredients={this.props.ings} />\n                    <BuildControls\n                        ingredientAdded={this.props.onIngredientAdded}\n                        ingredientRemoved={this.props.onIngredientRemoved}\n                        disabled={disabledInfo}\n                        purchasable={this.updatePurchaseState(this.props.ings)}\n                        ordered={this.purchaseHandler}\n                        price={this.props.price} />\n                </Aux>\n            );\n            orderSummary = <OrderSummary\n                ingredients={this.props.ings}\n                price={this.props.price}\n                purchaseCancelled={this.purchaseCancelHandler}\n                purchaseContinued={this.purchaseContinueHandler} />;\n        }\n        if (this.state.loading) {\n            orderSummary = <Spinner />;\n        }\n        return (\n            <Aux>\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\n                    {orderSummary}\n                </Modal>\n                {burger}\n            </Aux>\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onIngredientAdded: (ingName) => dispatch({ type: actionType.ADD_INGREDIENTS, ingredientName: ingName }),\n        onIngredientRemoved: (ingName) => dispatch({ type: actionType.REMOVE_INGREDIENTS, ingredientName: ingName }),\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        ings: state.ingredients,\n        price: state.totalPrice,\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));"]},"metadata":{},"sourceType":"module"}