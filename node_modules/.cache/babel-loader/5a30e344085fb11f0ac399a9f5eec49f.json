{"ast":null,"code":"import _defineProperty from \"/home/mojtaba/Desktop/Burgur_Builder/burgur_builder/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/mojtaba/Desktop/Burgur_Builder/burgur_builder/src/containers/Orders/Orders.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport Order from '../../components/Order/Order';\nimport axios from '../../axios-orders';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport Spinner from '../../components/UI/Spinner/Spinner';\n\nclass Orders extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      orders: [],\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    axios.get('orders.json').then(res => {\n      const fetchedOrders = [];\n\n      for (let key in res.data) {\n        fetchedOrders.push(_objectSpread({}, res.data[key], {\n          id: key\n        }));\n      }\n\n      console.log(res.data);\n      console.log(fetchedOrders);\n      this.setState({\n        loading: false,\n        orders: fetchedOrders\n      });\n    }).catch(err => {\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    let orders = React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    });\n    if (this.state.loading) orders = this.state.orders.map(order => React.createElement(Order, {\n      key: order.id,\n      ingredients: order.ingredients,\n      price: order.price,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default withErrorHandler(Orders, axios);","map":{"version":3,"sources":["/home/mojtaba/Desktop/Burgur_Builder/burgur_builder/src/containers/Orders/Orders.js"],"names":["React","Component","Order","axios","withErrorHandler","Spinner","Orders","state","orders","loading","componentDidMount","get","then","res","fetchedOrders","key","data","push","id","console","log","setState","catch","err","render","map","order","ingredients","price"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,8BAAlB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,gBAAP,MAA6B,6CAA7B;AACA,OAAOC,OAAP,MAAoB,qCAApB;;AAEA,MAAMC,MAAN,SAAqBL,SAArB,CAA+B;AAAA;AAAA;AAAA,SAC3BM,KAD2B,GACnB;AACJC,MAAAA,MAAM,EAAE,EADJ;AAEJC,MAAAA,OAAO,EAAE;AAFL,KADmB;AAAA;;AAK3BC,EAAAA,iBAAiB,GAAG;AAChBP,IAAAA,KAAK,CAACQ,GAAN,CAAU,aAAV,EACKC,IADL,CACUC,GAAG,IAAI;AACT,YAAMC,aAAa,GAAG,EAAtB;;AACA,WAAK,IAAIC,GAAT,IAAgBF,GAAG,CAACG,IAApB,EAA0B;AACtBF,QAAAA,aAAa,CAACG,IAAd,mBACOJ,GAAG,CAACG,IAAJ,CAASD,GAAT,CADP;AAEIG,UAAAA,EAAE,EAAEH;AAFR;AAIH;;AACDI,MAAAA,OAAO,CAACC,GAAR,CAAYP,GAAG,CAACG,IAAhB;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYN,aAAZ;AACA,WAAKO,QAAL,CAAc;AAAEZ,QAAAA,OAAO,EAAE,KAAX;AAAkBD,QAAAA,MAAM,EAAEM;AAA1B,OAAd;AACH,KAZL,EAYOQ,KAZP,CAYaC,GAAG,IAAI;AACZ,WAAKF,QAAL,CAAc;AAAEZ,QAAAA,OAAO,EAAE;AAAX,OAAd;AACH,KAdL;AAeH;;AAEDe,EAAAA,MAAM,GAAG;AACL,QAAIhB,MAAM,GAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAb;AACA,QAAG,KAAKD,KAAL,CAAWE,OAAd,EACAD,MAAM,GAAC,KAAKD,KAAL,CAAWC,MAAX,CAAkBiB,GAAlB,CAAsBC,KAAK,IAC9B,oBAAC,KAAD;AACI,MAAA,GAAG,EAAEA,KAAK,CAACR,EADf;AAEI,MAAA,WAAW,EAAEQ,KAAK,CAACC,WAFvB;AAGI,MAAA,KAAK,EAAED,KAAK,CAACE,KAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADG,CAAP;AAMA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAKH;;AArC0B;;AAwC/B,eAAexB,gBAAgB,CAACE,MAAD,EAASH,KAAT,CAA/B","sourcesContent":["import React, { Component } from 'react';\nimport Order from '../../components/Order/Order';\nimport axios from '../../axios-orders';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport Spinner from '../../components/UI/Spinner/Spinner'\n\nclass Orders extends Component {\n    state = {\n        orders: [],\n        loading: true,\n    }\n    componentDidMount() {\n        axios.get('orders.json')\n            .then(res => {\n                const fetchedOrders = [];\n                for (let key in res.data) {\n                    fetchedOrders.push({\n                        ...res.data[key],\n                        id: key,\n                    })\n                }\n                console.log(res.data);\n                console.log(fetchedOrders);\n                this.setState({ loading: false, orders: fetchedOrders });\n            }).catch(err => {\n                this.setState({ loading: false })\n            });\n    }\n\n    render() {\n        let orders = <Spinner/>;\n        if(this.state.loading)\n        orders=this.state.orders.map(order => (\n            <Order\n                key={order.id}\n                ingredients={order.ingredients}\n                price={order.price} />\n        ))\n        return (\n            <div>\n                {}\n            </div>\n        );\n    };\n}\n\nexport default withErrorHandler(Orders, axios);"]},"metadata":{},"sourceType":"module"}