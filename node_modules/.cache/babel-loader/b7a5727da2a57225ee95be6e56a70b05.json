{"ast":null,"code":"import _defineProperty from \"/home/mojtaba/Desktop/Burgur_Builder/burgur_builder/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as actionType from '../actions';\nconst initialState = {\n  result: []\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionType.STORE_RESULT:\n      return _objectSpread({}, state, {\n        result: state.result.concat({\n          id: new Date(),\n          value: state.counter\n        })\n      });\n      break;\n\n    case actionType.DELETE_RESULT:\n      {\n        const updatedArray = state.result.filter(result => result.id !== action.resultElId);\n        console.log(action.resultElId);\n        return _objectSpread({}, state, {\n          result: updatedArray\n        });\n      }\n  }\n\n  return state;\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/mojtaba/Desktop/Burgur_Builder/burgur_builder/src/store/reducers/result.js"],"names":["actionType","initialState","result","reducer","state","action","type","STORE_RESULT","concat","id","Date","value","counter","DELETE_RESULT","updatedArray","filter","resultElId","console","log"],"mappings":";;;;;;AAAA,OAAO,KAAKA,UAAZ,MAA4B,YAA5B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAE;AADS,CAArB;;AAIA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,UAAU,CAACO,YAAhB;AAA8B,+BACvBH,KADuB;AAE1BF,QAAAA,MAAM,EAAEE,KAAK,CAACF,MAAN,CAAaM,MAAb,CAAoB;AAAEC,UAAAA,EAAE,EAAE,IAAIC,IAAJ,EAAN;AAAkBC,UAAAA,KAAK,EAAEP,KAAK,CAACQ;AAA/B,SAApB;AAFkB;AAG3B;;AACH,SAAKZ,UAAU,CAACa,aAAhB;AAA+B;AAC3B,cAAMC,YAAY,GAAGV,KAAK,CAACF,MAAN,CAAaa,MAAb,CAAoBb,MAAM,IAAIA,MAAM,CAACO,EAAP,KAAcJ,MAAM,CAACW,UAAnD,CAArB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYb,MAAM,CAACW,UAAnB;AACA,iCACOZ,KADP;AAEIF,UAAAA,MAAM,EAAEY;AAFZ;AAIH;AAZL;;AAcA,SAAOV,KAAP;AACH,CAhBD;;AAkBA,eAAeD,OAAf","sourcesContent":["import * as actionType from '../actions'\n\nconst initialState = {\n    result: [],\n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionType.STORE_RESULT: return {\n            ...state,\n            result: state.result.concat({ id: new Date(), value: state.counter })\n        }; break;\n        case actionType.DELETE_RESULT: {\n            const updatedArray = state.result.filter(result => result.id !== action.resultElId)\n            console.log(action.resultElId);\n            return {\n                ...state,\n                result: updatedArray,\n            }\n        }\n    }\n    return state;\n};\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}