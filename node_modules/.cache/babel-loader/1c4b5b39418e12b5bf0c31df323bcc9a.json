{"ast":null,"code":"import _defineProperty from \"/home/mojtaba/projects/Burgur_Builder/burgur_builder_git_rep/burgur_builder_reactjs/burgur_builder/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as actionTypes from \"../actions/actionTypes\";\nconst initialState = {\n  ingredients: null,\n  totalPrice: 4,\n  error: false,\n  building: false\n};\nconst INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_INGREDIENTS:\n      return _objectSpread({}, state, {\n        ingredients: _objectSpread({}, state.ingredients, {\n          [action.ingredientName]: state.ingredients[action.ingredientName] + 1\n        }),\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\n        building: true\n      });\n\n    case actionTypes.REMOVE_INGREDIENTS:\n      return _objectSpread({}, state, {\n        ingredients: _objectSpread({}, state.ingredients, {\n          [action.ingredientName]: state.ingredients[action.ingredientName] - 1\n        }),\n        totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName],\n        building: true\n      });\n\n    case actionTypes.SET_INGREDIENTS:\n      return _objectSpread({}, state, {\n        ingredients: {\n          salad: action.ingredients.salad,\n          bacon: action.ingredients.bacon,\n          cheese: action.ingredients.cheese,\n          meat: action.ingredients.meat\n        },\n        totalPrice: 4,\n        error: false,\n        building: false\n      });\n\n    case actionTypes.FETCH_INCREDIENTS_FAILED:\n      return _objectSpread({}, state, {\n        error: true\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/mojtaba/projects/Burgur_Builder/burgur_builder_git_rep/burgur_builder_reactjs/burgur_builder/src/store/reducers/burgerBuilder.js"],"names":["actionTypes","initialState","ingredients","totalPrice","error","building","INGREDIENT_PRICES","salad","cheese","meat","bacon","reducer","state","action","type","ADD_INGREDIENTS","ingredientName","REMOVE_INGREDIENTS","SET_INGREDIENTS","FETCH_INCREDIENTS_FAILED"],"mappings":";;;;;;AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,WAAW,EAAE,IADM;AAEnBC,EAAAA,UAAU,EAAE,CAFO;AAGnBC,EAAAA,KAAK,EAAE,KAHY;AAInBC,EAAAA,QAAQ,EAAE;AAJS,CAArB;AAOA,MAAMC,iBAAiB,GAAG;AACxBC,EAAAA,KAAK,EAAE,GADiB;AAExBC,EAAAA,MAAM,EAAE,GAFgB;AAGxBC,EAAAA,IAAI,EAAE,GAHkB;AAIxBC,EAAAA,KAAK,EAAE;AAJiB,CAA1B;;AAOA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGX,YAAT,EAAuBY,MAAvB,KAAkC;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKd,WAAW,CAACe,eAAjB;AACE,+BACKH,KADL;AAEEV,QAAAA,WAAW,oBACNU,KAAK,CAACV,WADA;AAET,WAACW,MAAM,CAACG,cAAR,GAAyBJ,KAAK,CAACV,WAAN,CAAkBW,MAAM,CAACG,cAAzB,IAA2C;AAF3D,UAFb;AAMEb,QAAAA,UAAU,EAAES,KAAK,CAACT,UAAN,GAAmBG,iBAAiB,CAACO,MAAM,CAACG,cAAR,CANlD;AAOEX,QAAAA,QAAQ,EAAE;AAPZ;;AASF,SAAKL,WAAW,CAACiB,kBAAjB;AACE,+BACKL,KADL;AAEEV,QAAAA,WAAW,oBACNU,KAAK,CAACV,WADA;AAET,WAACW,MAAM,CAACG,cAAR,GAAyBJ,KAAK,CAACV,WAAN,CAAkBW,MAAM,CAACG,cAAzB,IAA2C;AAF3D,UAFb;AAMEb,QAAAA,UAAU,EAAES,KAAK,CAACT,UAAN,GAAmBG,iBAAiB,CAACO,MAAM,CAACG,cAAR,CANlD;AAOEX,QAAAA,QAAQ,EAAE;AAPZ;;AASF,SAAKL,WAAW,CAACkB,eAAjB;AACE,+BACKN,KADL;AAEEV,QAAAA,WAAW,EAAE;AACXK,UAAAA,KAAK,EAAEM,MAAM,CAACX,WAAP,CAAmBK,KADf;AAEXG,UAAAA,KAAK,EAAEG,MAAM,CAACX,WAAP,CAAmBQ,KAFf;AAGXF,UAAAA,MAAM,EAAEK,MAAM,CAACX,WAAP,CAAmBM,MAHhB;AAIXC,UAAAA,IAAI,EAAEI,MAAM,CAACX,WAAP,CAAmBO;AAJd,SAFf;AAQEN,QAAAA,UAAU,EAAE,CARd;AASEC,QAAAA,KAAK,EAAE,KATT;AAUEC,QAAAA,QAAQ,EAAC;AAVX;;AAYF,SAAKL,WAAW,CAACmB,wBAAjB;AACE,+BACKP,KADL;AAEER,QAAAA,KAAK,EAAE;AAFT;;AAIF;AACE,aAAOQ,KAAP;AAxCJ;AA0CD,CA3CD;;AA6CA,eAAeD,OAAf","sourcesContent":["import * as actionTypes from \"../actions/actionTypes\";\n\nconst initialState = {\n  ingredients: null,\n  totalPrice: 4,\n  error: false,\n  building: false\n};\n\nconst INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_INGREDIENTS:\n      return {\n        ...state,\n        ingredients: {\n          ...state.ingredients,\n          [action.ingredientName]: state.ingredients[action.ingredientName] + 1\n        },\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\n        building: true\n      };\n    case actionTypes.REMOVE_INGREDIENTS:\n      return {\n        ...state,\n        ingredients: {\n          ...state.ingredients,\n          [action.ingredientName]: state.ingredients[action.ingredientName] - 1\n        },\n        totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName],\n        building: true\n      };\n    case actionTypes.SET_INGREDIENTS:\n      return {\n        ...state,\n        ingredients: {\n          salad: action.ingredients.salad,\n          bacon: action.ingredients.bacon,\n          cheese: action.ingredients.cheese,\n          meat: action.ingredients.meat\n        },\n        totalPrice: 4,\n        error: false,\n        building:false,\n      };\n    case actionTypes.FETCH_INCREDIENTS_FAILED:\n      return {\n        ...state,\n        error: true\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}