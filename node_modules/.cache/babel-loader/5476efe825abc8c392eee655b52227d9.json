{"ast":null,"code":"var _jsxFileName = \"/home/mojtaba/Desktop/Burgur_Builder/burgur_builder/src/containers/Orders/Orders.js\";\nimport React, { Component } from 'react';\nimport Order from '../../components/Order/Order';\nimport axios from '../../axios-orders';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport Spinner from '../../components/UI/Spinner/Spinner';\n\nclass Orders extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      orders: [],\n      loading: true\n    };\n  }\n\n  componentDidMount() {}\n\n  render() {\n    let orders = React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    });\n\n    if (!this.state.loading) {\n      orders = this.state.orders.map(order => React.createElement(Order, {\n        key: order.id,\n        ingredients: order.ingredients,\n        price: order.price,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, orders);\n  }\n\n}\n\n;\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onFetchOrders: () => dispatch\n  };\n};\n\nexport default withErrorHandler(Orders, axios);","map":{"version":3,"sources":["/home/mojtaba/Desktop/Burgur_Builder/burgur_builder/src/containers/Orders/Orders.js"],"names":["React","Component","Order","axios","withErrorHandler","Spinner","Orders","state","orders","loading","componentDidMount","render","map","order","id","ingredients","price","mapDispatchToProps","dispatch","onFetchOrders"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,8BAAlB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,gBAAP,MAA6B,6CAA7B;AACA,OAAOC,OAAP,MAAoB,qCAApB;;AAEA,MAAMC,MAAN,SAAqBL,SAArB,CAA+B;AAAA;AAAA;AAAA,SAC3BM,KAD2B,GACnB;AACJC,MAAAA,MAAM,EAAE,EADJ;AAEJC,MAAAA,OAAO,EAAE;AAFL,KADmB;AAAA;;AAK3BC,EAAAA,iBAAiB,GAAG,CAEnB;;AAEDC,EAAAA,MAAM,GAAG;AACL,QAAIH,MAAM,GAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAb;;AACA,QAAI,CAAC,KAAKD,KAAL,CAAWE,OAAhB,EAAyB;AACrBD,MAAAA,MAAM,GAAG,KAAKD,KAAL,CAAWC,MAAX,CAAkBI,GAAlB,CAAsBC,KAAK,IAChC,oBAAC,KAAD;AACI,QAAA,GAAG,EAAEA,KAAK,CAACC,EADf;AAEI,QAAA,WAAW,EAAED,KAAK,CAACE,WAFvB;AAGI,QAAA,KAAK,EAAEF,KAAK,CAACG,KAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADK,CAAT;AAMH;;AACD,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKR,MADL,CADJ;AAKH;;AAxB0B;;AAyB9B;;AAED,MAAMS,kBAAkB,GAAGC,QAAQ,IAAG;AACnC,SAAO;AACHC,IAAAA,aAAa,EAAC,MAAKD;AADhB,GAAP;AAGF,CAJD;;AAMA,eAAed,gBAAgB,CAACE,MAAD,EAASH,KAAT,CAA/B","sourcesContent":["import React, { Component } from 'react';\nimport Order from '../../components/Order/Order';\nimport axios from '../../axios-orders';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport Spinner from '../../components/UI/Spinner/Spinner'\n\nclass Orders extends Component {\n    state = {\n        orders: [],\n        loading: true,\n    }\n    componentDidMount() {\n      \n    }\n\n    render() {\n        let orders = <Spinner />;\n        if (!this.state.loading) {\n            orders = this.state.orders.map(order => (\n                <Order\n                    key={order.id}\n                    ingredients={order.ingredients}\n                    price={order.price} />\n            ))\n        }\n        return (\n            <div>\n                {orders}\n            </div>\n        );\n    };\n};\n\nconst mapDispatchToProps = dispatch =>{\n   return {\n       onFetchOrders:()=> dispatch\n   } \n}\n\nexport default withErrorHandler(Orders, axios);"]},"metadata":{},"sourceType":"module"}