{"ast":null,"code":"var _jsxFileName = \"/home/mojtaba/Desktop/Burgur_Builder/burgur_builder/src/components/Order/Order.js\";\nimport React from 'react';\nimport classes from './Order.module.css';\n\nconst order = props => {\n  const ingredients = [];\n\n  for (let ingredientsName in props.ingredients) {\n    ingredients.push({\n      name: ingredients,\n      amount: props.ingredients[ingredientsName]\n    });\n  }\n\n  const ingredientsOutput = ingredients.map((ig, index) => {\n    return React.createElement(\"span\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, ig.name, \"(\", ig.amount, \")\");\n  });\n  return React.createElement(\"div\", {\n    className: classes.Order,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Ingredients: \", ingredientsOutput), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Price: \", React.createElement(\"string\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"USD \", Number.parseFloat(props.price).toFixed(2))));\n};\n\nexport default order;","map":{"version":3,"sources":["/home/mojtaba/Desktop/Burgur_Builder/burgur_builder/src/components/Order/Order.js"],"names":["React","classes","order","props","ingredients","ingredientsName","push","name","amount","ingredientsOutput","map","ig","index","Order","Number","parseFloat","price","toFixed"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,oBAApB;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AACrB,QAAMC,WAAW,GAAG,EAApB;;AAEA,OAAK,IAAIC,eAAT,IAA4BF,KAAK,CAACC,WAAlC,EAA+C;AAC3CA,IAAAA,WAAW,CAACE,IAAZ,CACI;AACIC,MAAAA,IAAI,EAAEH,WADV;AAEII,MAAAA,MAAM,EAAEL,KAAK,CAACC,WAAN,CAAkBC,eAAlB;AAFZ,KADJ;AAMH;;AAED,QAAMI,iBAAiB,GAAGL,WAAW,CAACM,GAAZ,CAAgB,CAACC,EAAD,EAAIC,KAAJ,KAAc;AACpD,WAAO;AAAM,MAAA,GAAG,EAAEA,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACJD,EAAE,CAACJ,IADC,OACMI,EAAE,CAACH,MADT,MAAP;AAEH,GAHyB,CAA1B;AAKA,SACI;AAAK,IAAA,SAAS,EAAEP,OAAO,CAACY,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAiBJ,iBAAjB,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAaK,MAAM,CAACC,UAAP,CAAkBZ,KAAK,CAACa,KAAxB,EAA+BC,OAA/B,CAAuC,CAAvC,CAAb,CAAV,CAFJ,CADJ;AAMH,CAvBD;;AAyBA,eAAef,KAAf","sourcesContent":["import React from 'react';\nimport classes from './Order.module.css';\n\nconst order = (props) => {\n    const ingredients = []\n\n    for (let ingredientsName in props.ingredients) {\n        ingredients.push(\n            {\n                name: ingredients,\n                amount: props.ingredients[ingredientsName],\n            }\n        );\n    }\n\n    const ingredientsOutput = ingredients.map((ig,index) => {\n        return <span key={index\n        }>{ig.name}({ig.amount})</span>\n    })\n\n    return (\n        <div className={classes.Order}>\n            <p>Ingredients: {ingredientsOutput}</p>\n            <p>Price: <string>USD {Number.parseFloat(props.price).toFixed(2)}</string></p>\n        </div>\n    )\n};\n\nexport default order;"]},"metadata":{},"sourceType":"module"}