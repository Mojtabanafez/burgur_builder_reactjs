{"ast":null,"code":"var _jsxFileName = \"/home/mojtaba/Desktop/Burgur_Builder/burgur_builder/src/hoc/withErrorHandler/withErrorHandler.js\";\nimport React, { Component } from 'react';\nimport Modal from '../../components/UI/Modal/Modal';\nimport Aux from '../Aux/Aux';\n\nconst withErrorHandler = (WrappedComponent, axios) => {\n  var _temp;\n\n  return _temp = class extends Component {\n    constructor(...args) {\n      super(...args);\n      this.state = {\n        error: null\n      };\n\n      this.errorConfirmedHandler = () => {\n        this.setState({\n          error: null\n        });\n      };\n    }\n\n    componentWillMount() {\n      this.reqInterceptor = axios.interceptors.request.use(req => {\n        this.setState({\n          error: null\n        });\n        return req;\n      });\n      this.Interceptor = axios.interceptors.response.use(res => res, error => {\n        this.setState({\n          error: error\n        });\n      });\n    }\n\n    componentWillUnmount() {}\n\n    render() {\n      return React.createElement(Aux, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(Modal, {\n        show: this.state.error,\n        modalClosed: this.errorConfirmedHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, this.state.error ? this.state.error.message : null), React.createElement(WrappedComponent, Object.assign({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      })));\n    }\n\n  }, _temp;\n};\n\nexport default withErrorHandler;","map":{"version":3,"sources":["/home/mojtaba/Desktop/Burgur_Builder/burgur_builder/src/hoc/withErrorHandler/withErrorHandler.js"],"names":["React","Component","Modal","Aux","withErrorHandler","WrappedComponent","axios","state","error","errorConfirmedHandler","setState","componentWillMount","reqInterceptor","interceptors","request","use","req","Interceptor","response","res","componentWillUnmount","render","message","props"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,iCAAlB;AACA,OAAOC,GAAP,MAAgB,YAAhB;;AAEA,MAAMC,gBAAgB,GAAG,CAACC,gBAAD,EAAmBC,KAAnB,KAA8B;AAAA;;AACnD,iBAAO,cAAcL,SAAd,CAAwB;AAAA;AAAA;AAAA,WAC3BM,KAD2B,GACnB;AACJC,QAAAA,KAAK,EAAE;AADH,OADmB;;AAAA,WAoB3BC,qBApB2B,GAoBH,MAAM;AAC1B,aAAKC,QAAL,CAAc;AACVF,UAAAA,KAAK,EAAC;AADI,SAAd;AAGH,OAxB0B;AAAA;;AAK3BG,IAAAA,kBAAkB,GAAG;AACjB,WAAKC,cAAL,GAAsBN,KAAK,CAACO,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CAA+BC,GAAG,IAAI;AACxD,aAAKN,QAAL,CAAc;AAAEF,UAAAA,KAAK,EAAE;AAAT,SAAd;AACA,eAAOQ,GAAP;AACH,OAHqB,CAAtB;AAIA,WAAKC,WAAL,GAAiBX,KAAK,CAACO,YAAN,CAAmBK,QAAnB,CAA4BH,GAA5B,CAAgCI,GAAG,IAAIA,GAAvC,EAA4CX,KAAK,IAAI;AAClE,aAAKE,QAAL,CAAc;AAAEF,UAAAA,KAAK,EAAEA;AAAT,SAAd;AACH,OAFgB,CAAjB;AAGH;;AAEDY,IAAAA,oBAAoB,GAAE,CAGrB;;AAQDC,IAAAA,MAAM,GAAG;AACL,aACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAE,KAAKd,KAAL,CAAWC,KAAxB;AACI,QAAA,WAAW,EAAE,KAAKC,qBADtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEK,KAAKF,KAAL,CAAWC,KAAX,GAAoB,KAAKD,KAAL,CAAWC,KAAX,CAAiBc,OAArC,GAA6C,IAFlD,CADJ,EAKI,oBAAC,gBAAD,oBAAsB,KAAKC,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SALJ,CADJ;AASH;;AApC0B,GAA/B;AAsCH,CAvCD;;AAyCA,eAAenB,gBAAf","sourcesContent":["import React, { Component } from 'react';\nimport Modal from '../../components/UI/Modal/Modal';\nimport Aux from '../Aux/Aux';\n\nconst withErrorHandler = (WrappedComponent, axios ) => {\n    return class extends Component {\n        state = {\n            error: null,\n        }\n\n        componentWillMount() {\n            this.reqInterceptor = axios.interceptors.request.use(req => {\n                this.setState({ error: null });\n                return req;\n            })\n            this.Interceptor=axios.interceptors.response.use(res => res, error => {\n                this.setState({ error: error })\n            })\n        }\n\n        componentWillUnmount(){\n\n\n        }        \n        \n        errorConfirmedHandler = () => {\n            this.setState({\n                error:null,\n            })\n        }\n\n        render() {\n            return (\n                <Aux>\n                    <Modal show={this.state.error}\n                        modalClosed={this.errorConfirmedHandler}>\n                        {this.state.error ?  this.state.error.message:null}\n                    </Modal>\n                    <WrappedComponent {...this.props} />\n                </Aux>\n            );\n        }\n    }\n}\n\nexport default withErrorHandler;"]},"metadata":{},"sourceType":"module"}