{"ast":null,"code":"import _defineProperty from \"/home/mojtaba/Desktop/Burgur_Builder/burgur_builder/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/mojtaba/Desktop/Burgur_Builder/burgur_builder/src/containers/Blog/Posts/Posts.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport axios from '../../../axios';\nimport { Route } from 'react-router-dom';\nimport Post from '../../../components/Post/Post';\nimport './Posts.css';\nimport FullPost from '../FullPost/FullPost';\n\nclass Posts extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      posts: []\n    };\n\n    this.postSelectedHandler = id => {\n      // this.props.history.push({pathname: '/posts/' + id});\n      this.props.history.push('/posts/' + id);\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.props);\n    axios.get('/posts').then(response => {\n      const posts = response.data.slice(0, 4);\n      const updatedPosts = posts.map(post => {\n        return _objectSpread({}, post, {\n          author: 'Max'\n        });\n      });\n      this.setState({\n        posts: updatedPosts\n      }); // console.log( response );\n    }).catch(error => {\n      console.log(error); // this.setState({error: true});\n    });\n  }\n\n  render() {\n    let posts = React.createElement(\"p\", {\n      style: {\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Something went wrong!\");\n\n    if (!this.state.error) {\n      posts = this.state.posts.map(post => {\n        return (// <Link to={'/posts/' + post.id} key={post.id}>\n          React.createElement(Post, {\n            key: post.id,\n            title: post.title,\n            author: post.author,\n            clicked: () => this.postSelectedHandler(post.id),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 45\n            },\n            __self: this\n          }) // </Link>\n\n        );\n      });\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"section\", {\n      className: \"Posts\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, posts), React.createElement(Route, {\n      path: this.props.match.url + '/:id',\n      exact: true,\n      component: FullPost,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Posts;","map":{"version":3,"sources":["/home/mojtaba/Desktop/Burgur_Builder/burgur_builder/src/containers/Blog/Posts/Posts.js"],"names":["React","Component","axios","Route","Post","FullPost","Posts","state","posts","postSelectedHandler","id","props","history","push","componentDidMount","console","log","get","then","response","data","slice","updatedPosts","map","post","author","setState","catch","error","render","textAlign","title","match","url"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AAEA,OAAOC,IAAP,MAAiB,+BAAjB;AACA,OAAO,aAAP;AACA,OAAOC,QAAP,MAAqB,sBAArB;;AAEA,MAAMC,KAAN,SAAoBL,SAApB,CAA8B;AAAA;AAAA;AAAA,SAC1BM,KAD0B,GAClB;AACJC,MAAAA,KAAK,EAAE;AADH,KADkB;;AAAA,SAyB1BC,mBAzB0B,GAyBFC,EAAF,IAAU;AAC5B;AACA,WAAKC,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAyB,YAAYH,EAArC;AACH,KA5ByB;AAAA;;AAK1BI,EAAAA,iBAAiB,GAAI;AACjBC,IAAAA,OAAO,CAACC,GAAR,CAAa,KAAKL,KAAlB;AACAT,IAAAA,KAAK,CAACe,GAAN,CAAW,QAAX,EACKC,IADL,CACWC,QAAQ,IAAI;AACf,YAAMX,KAAK,GAAGW,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAqB,CAArB,EAAwB,CAAxB,CAAd;AACA,YAAMC,YAAY,GAAGd,KAAK,CAACe,GAAN,CAAWC,IAAI,IAAI;AACpC,iCACOA,IADP;AAEIC,UAAAA,MAAM,EAAE;AAFZ;AAIH,OALoB,CAArB;AAMA,WAAKC,QAAL,CAAe;AAAElB,QAAAA,KAAK,EAAEc;AAAT,OAAf,EARe,CASf;AACH,KAXL,EAYKK,KAZL,CAYYC,KAAK,IAAI;AACbb,MAAAA,OAAO,CAACC,GAAR,CAAaY,KAAb,EADa,CAEb;AACH,KAfL;AAgBH;;AAODC,EAAAA,MAAM,GAAI;AACN,QAAIrB,KAAK,GAAG;AAAG,MAAA,KAAK,EAAE;AAAEsB,QAAAA,SAAS,EAAE;AAAb,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAZ;;AACA,QAAK,CAAC,KAAKvB,KAAL,CAAWqB,KAAjB,EAAyB;AACrBpB,MAAAA,KAAK,GAAG,KAAKD,KAAL,CAAWC,KAAX,CAAiBe,GAAjB,CAAsBC,IAAI,IAAI;AAClC,eACI;AACA,8BAAC,IAAD;AACI,YAAA,GAAG,EAAEA,IAAI,CAACd,EADd;AAEI,YAAA,KAAK,EAAEc,IAAI,CAACO,KAFhB;AAGI,YAAA,MAAM,EAAEP,IAAI,CAACC,MAHjB;AAII,YAAA,OAAO,EAAE,MAAM,KAAKhB,mBAAL,CAA0Be,IAAI,CAACd,EAA/B,CAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,CAOI;;AAPJ;AASH,OAVO,CAAR;AAWH;;AAED,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAS,MAAA,SAAS,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKF,KADL,CADJ,EAII,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAE,KAAKG,KAAL,CAAWqB,KAAX,CAAiBC,GAAjB,GAAuB,MAApC;AAA4C,MAAA,KAAK,MAAjD;AAAkD,MAAA,SAAS,EAAE5B,QAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CADJ;AAQH;;AAtDyB;;AAyD9B,eAAeC,KAAf","sourcesContent":["import React, { Component } from 'react';\nimport axios from '../../../axios';\nimport { Route } from 'react-router-dom';\n\nimport Post from '../../../components/Post/Post';\nimport './Posts.css';\nimport FullPost from '../FullPost/FullPost';\n\nclass Posts extends Component {\n    state = {\n        posts: []\n    }\n\n    componentDidMount () {\n        console.log( this.props );\n        axios.get( '/posts' )\n            .then( response => {\n                const posts = response.data.slice( 0, 4 );\n                const updatedPosts = posts.map( post => {\n                    return {\n                        ...post,\n                        author: 'Max'\n                    }\n                } );\n                this.setState( { posts: updatedPosts } );\n                // console.log( response );\n            } )\n            .catch( error => {\n                console.log( error );\n                // this.setState({error: true});\n            } );\n    }\n\n    postSelectedHandler = ( id ) => {\n        // this.props.history.push({pathname: '/posts/' + id});\n        this.props.history.push( '/posts/' + id );\n    }\n\n    render () {\n        let posts = <p style={{ textAlign: 'center' }}>Something went wrong!</p>;\n        if ( !this.state.error ) {\n            posts = this.state.posts.map( post => {\n                return (\n                    // <Link to={'/posts/' + post.id} key={post.id}>\n                    <Post\n                        key={post.id}\n                        title={post.title}\n                        author={post.author}\n                        clicked={() => this.postSelectedHandler( post.id )} />\n                    // </Link>\n                );\n            } );\n        }\n\n        return (\n            <div>\n                <section className=\"Posts\">\n                    {posts}\n                </section>\n                <Route path={this.props.match.url + '/:id'} exact component={FullPost} />\n            </div>\n        );\n    }\n}\n\nexport default Posts;"]},"metadata":{},"sourceType":"module"}