{"ast":null,"code":"import _defineProperty from \"/home/mojtaba/Desktop/Burgur_Builder/burgur_builder/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nconst initialState = {\n  counter: 0,\n  result: []\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'INCREMENT':\n      {\n        const newState = Object.assign({}, state);\n        newState.counter = state.counter + 1;\n        return newState;\n      }\n      ;\n      break;\n\n    case 'ADD':\n      return _objectSpread({}, state, {\n        counter: state.counter + action.val\n      });\n      break;\n\n    case 'SUBTRACT':\n      return _objectSpread({}, state, {\n        counter: state.counter - action.val\n      });\n      break;\n\n    case 'DECREMENT':\n      return _objectSpread({}, state, {\n        counter: state.counter - 1\n      });\n      break;\n\n    case 'STORE_RESULT':\n      return _objectSpread({}, state);\n\n    case 'DELETE_RESULT':\n      return;\n  }\n\n  return state;\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/mojtaba/Desktop/Burgur_Builder/burgur_builder/src/store/reducer.js"],"names":["initialState","counter","result","reducer","state","action","type","newState","Object","assign","val"],"mappings":";;;;;;AACA,MAAMA,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE,CADQ;AAEjBC,EAAAA,MAAM,EAAE;AAFS,CAArB;;AAKA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,WAAL;AAAkB;AACd,cAAMC,QAAQ,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,KAAlB,CAAjB;AACAG,QAAAA,QAAQ,CAACN,OAAT,GAAmBG,KAAK,CAACH,OAAN,GAAgB,CAAnC;AACA,eAAOM,QAAP;AACH;AAAA;AAAE;;AACH,SAAK,KAAL;AAAY,+BACLH,KADK;AAERH,QAAAA,OAAO,EAAEG,KAAK,CAACH,OAAN,GAAgBI,MAAM,CAACK;AAFxB;AAGT;;AACH,SAAK,UAAL;AAAiB,+BACVN,KADU;AAEbH,QAAAA,OAAO,EAAEG,KAAK,CAACH,OAAN,GAAgBI,MAAM,CAACK;AAFnB;AAGd;;AACH,SAAK,WAAL;AAAkB,+BACXN,KADW;AAEdH,QAAAA,OAAO,EAAEG,KAAK,CAACH,OAAN,GAAgB;AAFX;AAGf;;AACH,SAAK,cAAL;AACI,+BACOG,KADP;;AAIJ,SAAK,eAAL;AACI;AAxBR;;AA0BA,SAAOA,KAAP;AACH,CA5BD;;AA8BA,eAAeD,OAAf","sourcesContent":["\nconst initialState = {\n    counter: 0,\n    result: [],\n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case 'INCREMENT': {\n            const newState = Object.assign({}, state);\n            newState.counter = state.counter + 1;\n            return newState;\n        }; break;\n        case 'ADD': return {\n            ...state,\n            counter: state.counter + action.val,\n        }; break;\n        case 'SUBTRACT': return {\n            ...state,\n            counter: state.counter - action.val,\n        }; break;\n        case 'DECREMENT': return {\n            ...state,\n            counter: state.counter - 1,\n        }; break;\n        case 'STORE_RESULT':\n            return{\n                ...state,\n                \n            }\n        case 'DELETE_RESULT':\n            return\n    }\n    return state;\n};\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}