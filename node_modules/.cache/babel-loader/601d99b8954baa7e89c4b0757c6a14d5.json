{"ast":null,"code":"import * as actionTypes from './actionTypes';\nimport axios from 'axios';\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\nexport const authSuccess = (token, userId) => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    idToken: token,\n    userId: userId\n  };\n};\nexport const authFail = error => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error\n  };\n};\nexport const logout = () => {\n  return {\n    type: actionTypes.AUTH_LOGOUT\n  };\n};\nexport const checkoutTimeout = expirationTime => {\n  return dispatch => {\n    setTimeout(() => {\n      dispatch();\n    }, expirationTime);\n  };\n};\nexport const auth = (email, password, isSignup) => {\n  return dispatch => {\n    dispatch(authStart());\n    const authData = {\n      email: email,\n      password: password,\n      returnSecureToken: true\n    };\n    let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyAfoD6o6Yl5KrNha2k7PjpmX8wwMZw6Q9Q';\n\n    if (!isSignup) {\n      url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyAfoD6o6Yl5KrNha2k7PjpmX8wwMZw6Q9Q';\n    }\n\n    axios.post(url, authData).then(response => {\n      console.log(response);\n      dispatch(authSuccess(response.data.idToken, response.data.localId));\n      dispatch(checkoutTimeout(response.data.expiresIn));\n    }).catch(err => {\n      console.log(err.response.data.error.message);\n      dispatch(authFail(err.response.data.error.message));\n    });\n  };\n};","map":{"version":3,"sources":["/home/mojtaba/Desktop/Burgur_Builder/burgur_builder/src/store/actions/auth.js"],"names":["actionTypes","axios","authStart","type","AUTH_START","authSuccess","token","userId","AUTH_SUCCESS","idToken","authFail","error","AUTH_FAIL","logout","AUTH_LOGOUT","checkoutTimeout","expirationTime","dispatch","setTimeout","auth","email","password","isSignup","authData","returnSecureToken","url","post","then","response","console","log","data","localId","expiresIn","catch","err","message"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAC3B,SAAO;AACHC,IAAAA,IAAI,EAAEH,WAAW,CAACI;AADf,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMC,WAAW,GAAG,CAAEC,KAAF,EAASC,MAAT,KAAqB;AAC5C,SAAO;AACHJ,IAAAA,IAAI,EAAEH,WAAW,CAACQ,YADf;AAEHC,IAAAA,OAAO,EAACH,KAFL;AAGHC,IAAAA,MAAM,EAACA;AAHJ,GAAP;AAKH,CANM;AAQP,OAAO,MAAMG,QAAQ,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHR,IAAAA,IAAI,EAAEH,WAAW,CAACY,SADf;AAEHD,IAAAA,KAAK,EAAEA;AAFJ,GAAP;AAIH,CALM;AAOP,OAAO,MAAME,MAAM,GAAC,MAAK;AACpB,SAAO;AACHV,IAAAA,IAAI,EAACH,WAAW,CAACc;AADd,GAAP;AAGJ,CAJM;AAMP,OAAO,MAAMC,eAAe,GAAIC,cAAD,IAAkB;AAC7C,SAAOC,QAAQ,IAAI;AACfC,IAAAA,UAAU,CAAC,MAAI;AACXD,MAAAA,QAAQ;AACX,KAFS,EAEPD,cAFO,CAAV;AAGH,GAJD;AAKH,CANM;AAQP,OAAO,MAAMG,IAAI,GAAG,CAACC,KAAD,EAAQC,QAAR,EAAkBC,QAAlB,KAA+B;AAC/C,SAAOL,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAACf,SAAS,EAAV,CAAR;AACA,UAAMqB,QAAQ,GAAG;AACbH,MAAAA,KAAK,EAACA,KADO;AAEbC,MAAAA,QAAQ,EAACA,QAFI;AAGbG,MAAAA,iBAAiB,EAAC;AAHL,KAAjB;AAKA,QAAIC,GAAG,GAAG,uGAAV;;AACA,QAAG,CAACH,QAAJ,EAAa;AACTG,MAAAA,GAAG,GAAE,mHAAL;AACH;;AACDxB,IAAAA,KAAK,CAACyB,IAAN,CAAWD,GAAX,EAAgBF,QAAhB,EACCI,IADD,CACMC,QAAQ,IAAE;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAX,MAAAA,QAAQ,CAACZ,WAAW,CAACuB,QAAQ,CAACG,IAAT,CAActB,OAAf,EAAwBmB,QAAQ,CAACG,IAAT,CAAcC,OAAtC,CAAZ,CAAR;AACAf,MAAAA,QAAQ,CAACF,eAAe,CAACa,QAAQ,CAACG,IAAT,CAAcE,SAAf,CAAhB,CAAR;AACH,KALD,EAMCC,KAND,CAMOC,GAAG,IAAE;AACRN,MAAAA,OAAO,CAACC,GAAR,CAAYK,GAAG,CAACP,QAAJ,CAAaG,IAAb,CAAkBpB,KAAlB,CAAwByB,OAApC;AACAnB,MAAAA,QAAQ,CAACP,QAAQ,CAACyB,GAAG,CAACP,QAAJ,CAAaG,IAAb,CAAkBpB,KAAlB,CAAwByB,OAAzB,CAAT,CAAR;AACH,KATD;AAUH,GArBD;AAsBH,CAvBM","sourcesContent":["import * as actionTypes from './actionTypes';\nimport axios from 'axios';\n\nexport const authStart = () => {\n    return {\n        type: actionTypes.AUTH_START\n    }\n}\n\nexport const authSuccess = ( token, userId ) => {\n    return {\n        type: actionTypes.AUTH_SUCCESS,\n        idToken:token,\n        userId:userId\n    }\n}\n\nexport const authFail = (error) => {\n    return {\n        type: actionTypes.AUTH_FAIL,\n        error: error\n    }\n}\n\nexport const logout=() =>{\n     return {\n         type:actionTypes.AUTH_LOGOUT\n     }\n}\n\nexport const checkoutTimeout = (expirationTime)=>{\n    return dispatch => {\n        setTimeout(()=>{\n            dispatch()\n        }, expirationTime)\n    }\n}\n\nexport const auth = (email, password, isSignup) => {\n    return dispatch => {\n        dispatch(authStart());\n        const authData = {\n            email:email,\n            password:password,\n            returnSecureToken:true\n        }\n        let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyAfoD6o6Yl5KrNha2k7PjpmX8wwMZw6Q9Q';\n        if(!isSignup){\n            url ='https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyAfoD6o6Yl5KrNha2k7PjpmX8wwMZw6Q9Q'\n        }\n        axios.post(url, authData)\n        .then(response=>{\n            console.log(response);\n            dispatch(authSuccess(response.data.idToken, response.data.localId));\n            dispatch(checkoutTimeout(response.data.expiresIn))\n        })\n        .catch(err=>{\n            console.log(err.response.data.error.message);\n            dispatch(authFail(err.response.data.error.message));\n        })\n    }\n}"]},"metadata":{},"sourceType":"module"}