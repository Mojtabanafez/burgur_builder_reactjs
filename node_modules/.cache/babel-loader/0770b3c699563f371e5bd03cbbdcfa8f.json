{"ast":null,"code":"var _jsxFileName = \"/home/mojtaba/Desktop/Burgur_Builder/burgur_builder/src/containers/Checkout/Checkout.js\";\nimport React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\nimport ContactData from './ContactData/ContactData';\nimport { connect } from 'react-redux';\nimport * as action from '../../store/actions/index';\n\nclass Checkout extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.checkoutCancelledHandler = () => {\n      this.props.history.goBack();\n    };\n\n    this.checkoutContinueHandler = () => {\n      console.log(this.props);\n      this.props.history.replace('/checkout/contact-data');\n    };\n  }\n\n  // state = {\n  //     ingredients: null,\n  //     price:0,\n  // };\n  // componentWillMount() {\n  //     const query = new URLSearchParams(this.props.location.search);\n  //     const ingredients = {};\n  //     let price=0;\n  //     for (let param of query.entries()) {\n  //         if (param[0] === 'price') {\n  //             price = param[1];\n  //         }else{\n  //             ingredients[param[0]] = +param[1];\n  //         }\n  //     }\n  //     this.setState({\n  //         price: price,\n  //         ingredients: ingredients\n  //     });\n  // }\n  componentWillMount() {\n    this.props.onInitPurchase();\n  }\n\n  render() {\n    console.log(\"[checkout] render\");\n    let summary = React.createElement(Redirect, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    });\n\n    if (this.props.ings) {\n      const purchasedRedirect = this.props.purchased ? React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }) : null;\n      summary = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, pu, React.createElement(CheckoutSummary, {\n        ingredients: this.props.ings,\n        checkoutContinued: this.checkoutContinueHandler,\n        checkoutCancelled: this.checkoutCancelledHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: this.props.match.path + '/contact-data',\n        component: ContactData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }));\n    }\n\n    return {\n      summary\n    };\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    ings: state.burgerBuilder.ingredients,\n    purchased: state.order.purchased\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onInitPurchase: () => dispatch(action.purchaseInit())\n  };\n};\n\nexport default connect(mapStateToProps)(Checkout);","map":{"version":3,"sources":["/home/mojtaba/Desktop/Burgur_Builder/burgur_builder/src/containers/Checkout/Checkout.js"],"names":["React","Component","Route","CheckoutSummary","ContactData","connect","action","Checkout","checkoutCancelledHandler","props","history","goBack","checkoutContinueHandler","console","log","replace","componentWillMount","onInitPurchase","render","summary","ings","purchasedRedirect","purchased","pu","match","path","mapStateToProps","state","burgerBuilder","ingredients","order","mapDispatchToProps","dispatch","purchaseInit"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,eAAP,MAA4B,wDAA5B;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,MAAZ,MAAwB,2BAAxB;;AAEA,MAAMC,QAAN,SAAuBN,SAAvB,CAAiC;AAAA;AAAA;;AAAA,SA0B7BO,wBA1B6B,GA0BF,MAAM;AAC7B,WAAKC,KAAL,CAAWC,OAAX,CAAmBC,MAAnB;AACH,KA5B4B;;AAAA,SA6B7BC,uBA7B6B,GA6BH,MAAM;AAC5BC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,KAAjB;AACA,WAAKA,KAAL,CAAWC,OAAX,CAAmBK,OAAnB,CAA2B,wBAA3B;AACH,KAhC4B;AAAA;;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAC,EAAAA,kBAAkB,GAAG;AACjB,SAAKP,KAAL,CAAWQ,cAAX;AACH;;AASDC,EAAAA,MAAM,GAAG;AACLL,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AAEA,QAAIK,OAAO,GAAG,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAd;;AAEA,QAAI,KAAKV,KAAL,CAAWW,IAAf,EAAqB;AACjB,YAAMC,iBAAiB,GAAG,KAAKZ,KAAL,CAAWa,SAAX,GAAuB,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAvB,GAA6C,IAAvE;AACAH,MAAAA,OAAO,GACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKI,EADL,EAEI,oBAAC,eAAD;AACI,QAAA,WAAW,EAAE,KAAKd,KAAL,CAAWW,IAD5B;AAEI,QAAA,iBAAiB,EAAE,KAAKR,uBAF5B;AAGI,QAAA,iBAAiB,EAAE,KAAKJ,wBAH5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAMI,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAE,KAAKC,KAAL,CAAWe,KAAX,CAAiBC,IAAjB,GAAwB,eAArC;AACI,QAAA,SAAS,EAAErB,WADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANJ,CADJ;AAWH;;AACD,WACI;AAAEe,MAAAA;AAAF,KADJ;AAGH;;AAvD4B;;AA0DjC,MAAMO,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHP,IAAAA,IAAI,EAAEO,KAAK,CAACC,aAAN,CAAoBC,WADvB;AAEHP,IAAAA,SAAS,EAAEK,KAAK,CAACG,KAAN,CAAYR;AAFpB,GAAP;AAIH,CALD;;AAOA,MAAMS,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHf,IAAAA,cAAc,EAAE,MAAMe,QAAQ,CAAC1B,MAAM,CAAC2B,YAAP,EAAD;AAD3B,GAAP;AAGH,CAJD;;AAOA,eAAe5B,OAAO,CAACqB,eAAD,CAAP,CAAyBnB,QAAzB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\nimport ContactData from './ContactData/ContactData';\nimport { connect } from 'react-redux'\nimport * as action from '../../store/actions/index'\n\nclass Checkout extends Component {\n    // state = {\n    //     ingredients: null,\n    //     price:0,\n    // };\n    // componentWillMount() {\n    //     const query = new URLSearchParams(this.props.location.search);\n    //     const ingredients = {};\n    //     let price=0;\n    //     for (let param of query.entries()) {\n    //         if (param[0] === 'price') {\n    //             price = param[1];\n    //         }else{\n    //             ingredients[param[0]] = +param[1];\n    //         }\n    //     }\n    //     this.setState({\n    //         price: price,\n    //         ingredients: ingredients\n    //     });\n    // }\n\n    componentWillMount() {\n        this.props.onInitPurchase();\n    }\n\n    checkoutCancelledHandler = () => {\n        this.props.history.goBack();\n    }\n    checkoutContinueHandler = () => {\n        console.log(this.props);\n        this.props.history.replace('/checkout/contact-data');\n    }\n    render() {\n        console.log(\"[checkout] render\");\n\n        let summary = <Redirect to=\"/\" />\n\n        if (this.props.ings) {\n            const purchasedRedirect = this.props.purchased ? <Redirect to=\"/\" /> : null;\n            summary = (\n                <div>\n                    {pu}\n                    <CheckoutSummary\n                        ingredients={this.props.ings}\n                        checkoutContinued={this.checkoutContinueHandler}\n                        checkoutCancelled={this.checkoutCancelledHandler} />\n                    <Route path={this.props.match.path + '/contact-data'}\n                        component={ContactData} />\n                </div>\n            )\n        }\n        return (\n            { summary }\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        ings: state.burgerBuilder.ingredients,\n        purchased: state.order.purchased\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onInitPurchase: () => dispatch(action.purchaseInit()),\n    }\n}\n\n\nexport default connect(mapStateToProps)(Checkout);"]},"metadata":{},"sourceType":"module"}