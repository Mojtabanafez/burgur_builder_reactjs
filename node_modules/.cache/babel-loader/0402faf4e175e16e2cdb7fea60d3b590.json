{"ast":null,"code":"var _jsxFileName = \"/home/mojtaba/Desktop/Burgur_Builder/burgur_builder/src/hoc/Layout/Layout.js\";\nimport React, { Component } from 'react';\nimport Aux from '../Aux/Aux';\nimport { connect } from 'react-redux';\nimport App from '../../App';\nimport classes from './Layout.module.css';\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\n\nclass Layout extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showSideDrawer: false\n    };\n\n    this.sideDrawerClosedHandler = () => {\n      this.setState({\n        showSideDrawer: false\n      });\n    };\n\n    this.sideDrawerToggleHandler = () => {\n      this.setState(prevState => {\n        return {\n          showSideDrawer: !prevState.showSideDrawer\n        };\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(Aux, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(Toolbar, {\n      isAuth: isAuthenticated,\n      drawerToggleClicked: this.sideDrawerToggleHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }), React.createElement(SideDrawer, {\n      closed: this.sideDrawerClosedHandler,\n      open: this.state.showSideDrawer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), React.createElement(\"main\", {\n      className: classes.Content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, this.props.children));\n  }\n\n}\n\n;\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null\n  };\n};\n\nexport default connect(mapStateToProps)(Layout);","map":{"version":3,"sources":["/home/mojtaba/Desktop/Burgur_Builder/burgur_builder/src/hoc/Layout/Layout.js"],"names":["React","Component","Aux","connect","App","classes","Toolbar","SideDrawer","Layout","state","showSideDrawer","sideDrawerClosedHandler","setState","sideDrawerToggleHandler","prevState","render","isAuthenticated","Content","props","children","mapStateToProps","auth","token"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,YAAhB;AACA,SAAQC,OAAR,QAAuB,aAAvB;AACA,OAAOC,GAAP,MAAgB,WAAhB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,OAAP,MAAoB,6CAApB;AACA,OAAOC,UAAP,MAAuB,mDAAvB;;AAEA,MAAMC,MAAN,SAAqBP,SAArB,CAA+B;AAAA;AAAA;AAAA,SAC3BQ,KAD2B,GACnB;AACJC,MAAAA,cAAc,EAAE;AADZ,KADmB;;AAAA,SAK3BC,uBAL2B,GAKD,MAAM;AAC5B,WAAKC,QAAL,CAAc;AAAEF,QAAAA,cAAc,EAAE;AAAlB,OAAd;AACH,KAP0B;;AAAA,SAS3BG,uBAT2B,GASD,MAAM;AAC5B,WAAKD,QAAL,CAAeE,SAAD,IAAa;AACvB,eAAO;AAACJ,UAAAA,cAAc,EAAE,CAACI,SAAS,CAACJ;AAA5B,SAAP;AACH,OAFD;AAGH,KAb0B;AAAA;;AAe3BK,EAAAA,MAAM,GAAG;AACL,WACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AACE,MAAA,MAAM,EAAEC,eADV;AAEE,MAAA,mBAAmB,EAAE,KAAKH,uBAF5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAKE,oBAAC,UAAD;AACE,MAAA,MAAM,EAAE,KAAKF,uBADf;AAEE,MAAA,IAAI,EAAE,KAAKF,KAAL,CAAWC,cAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,EASE;AAAM,MAAA,SAAS,EAAEL,OAAO,CAACY,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmC,KAAKC,KAAL,CAAWC,QAA9C,CATF,CADF;AAaH;;AA7B0B;;AA8B9B;;AAED,MAAMC,eAAe,GAAGX,KAAK,IAAI;AAC7B,SAAO;AACHO,IAAAA,eAAe,EAAEP,KAAK,CAACY,IAAN,CAAWC,KAAX,KAAqB;AADnC,GAAP;AAGH,CAJD;;AAKA,eAAenB,OAAO,CAACiB,eAAD,CAAP,CAAyBZ,MAAzB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport Aux from '../Aux/Aux';\nimport {connect } from 'react-redux'\nimport App from '../../App';\nimport classes from './Layout.module.css'\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar'\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer'\n\nclass Layout extends Component {\n    state = {\n        showSideDrawer: false,\n    }\n\n    sideDrawerClosedHandler = () => {\n        this.setState({ showSideDrawer: false });\n    }\n\n    sideDrawerToggleHandler = () => {\n        this.setState((prevState)=>{\n            return {showSideDrawer: !prevState.showSideDrawer}\n        });\n    }\n\n    render() {\n        return (\n          <Aux>\n            <Toolbar\n              isAuth={isAuthenticated}\n              drawerToggleClicked={this.sideDrawerToggleHandler}\n            />\n            <SideDrawer\n              closed={this.sideDrawerClosedHandler}\n              open={this.state.showSideDrawer}\n            />\n            <main className={classes.Content}>{this.props.children}</main>\n          </Aux>\n        );\n    };\n};\n\nconst mapStateToProps = state => {\n    return {\n        isAuthenticated: state.auth.token !== null,\n    };\n}\nexport default connect(mapStateToProps)(Layout);"]},"metadata":{},"sourceType":"module"}