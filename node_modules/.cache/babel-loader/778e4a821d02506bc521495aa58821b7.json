{"ast":null,"code":"import * as actionTypes from './actionTypes';\nexport const addIngredient = name => {\n  return {\n    type: actionTypes.ADD_INGREDIENTS,\n    ingredientName: name\n  };\n};\nexport const removeIngredient = name => {\n  return {\n    type: actionTypes.REMOVE_INGREDIENTS,\n    ingredientName: name\n  };\n};\nexport const setIngredients = ingredients => {\n  return {\n    type: actionTypes.SET_INGREDIENTS,\n    ingredients: ingredients\n  };\n};\nexport const initIngredients = () => {\n  return dispatch => {\n    axios.get('/ingredients.json').then(response => {\n      this.setState({\n        ingredients: response.data\n      });\n    }).catch(error => {\n      this.setState({\n        error: true\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/home/mojtaba/Desktop/Burgur_Builder/burgur_builder/src/store/actions/burgerBuilder.js"],"names":["actionTypes","addIngredient","name","type","ADD_INGREDIENTS","ingredientName","removeIngredient","REMOVE_INGREDIENTS","setIngredients","ingredients","SET_INGREDIENTS","initIngredients","dispatch","axios","get","then","response","setState","data","catch","error"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AAGA,OAAO,MAAMC,aAAa,GAAIC,IAAD,IAAU;AACnC,SAAO;AACHC,IAAAA,IAAI,EAAEH,WAAW,CAACI,eADf;AAEHC,IAAAA,cAAc,EAAEH;AAFb,GAAP;AAIH,CALM;AAOP,OAAO,MAAMI,gBAAgB,GAAIJ,IAAD,IAAU;AACtC,SAAO;AACHC,IAAAA,IAAI,EAAEH,WAAW,CAACO,kBADf;AAEHF,IAAAA,cAAc,EAAEH;AAFb,GAAP;AAIH,CALM;AAOP,OAAO,MAAMM,cAAc,GAAGC,WAAD,IAAe;AACxC,SAAO;AACHN,IAAAA,IAAI,EAACH,WAAW,CAACU,eADd;AAEHD,IAAAA,WAAW,EAACA;AAFT,GAAP;AAIH,CALM;AAOP,OAAO,MAAME,eAAe,GAAG,MAAI;AAC/B,SAAOC,QAAQ,IAAG;AACdC,IAAAA,KAAK,CAACC,GAAN,CAAU,mBAAV,EACKC,IADL,CACUC,QAAQ,IAAI;AACd,WAAKC,QAAL,CAAc;AAAER,QAAAA,WAAW,EAAEO,QAAQ,CAACE;AAAxB,OAAd;AACH,KAHL,EAIKC,KAJL,CAIWC,KAAK,IAAI;AACZ,WAAKH,QAAL,CAAc;AAAEG,QAAAA,KAAK,EAAE;AAAT,OAAd;AACH,KANL;AAOH,GARD;AASH,CAVM","sourcesContent":["import * as actionTypes from './actionTypes';\n\n\nexport const addIngredient = (name) => {\n    return {\n        type: actionTypes.ADD_INGREDIENTS,\n        ingredientName: name,\n    };\n};\n\nexport const removeIngredient = (name) => {\n    return {\n        type: actionTypes.REMOVE_INGREDIENTS,\n        ingredientName: name,\n    };\n};\n\nexport const setIngredients =(ingredients)=>{\n    return {\n        type:actionTypes.SET_INGREDIENTS,\n        ingredients:ingredients, \n    };\n};\n\nexport const initIngredients = ()=>{\n    return dispatch =>{\n        axios.get('/ingredients.json')\n            .then(response => {\n                this.setState({ ingredients: response.data });\n            })\n            .catch(error => {\n                this.setState({ error: true });\n            });\n    }\n}"]},"metadata":{},"sourceType":"module"}