{"ast":null,"code":"import _defineProperty from \"/home/mojtaba/Desktop/Burgur_Builder/burgur_builder/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/mojtaba/Desktop/Burgur_Builder/burgur_builder/src/containers/Blog/Posts/Posts.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport axios from '../../../axios';\nimport post from '../../../components/Post/Post';\nimport './Pos';\n\nclass Posts {\n  constructor() {\n    this.state = {\n      posts: [],\n      selectedPostId: null\n    };\n\n    this.postSelectedHandler = id => {\n      this.setState({\n        selectedPostId: id\n      });\n    };\n  }\n\n  componentDidMount() {\n    const posts = axios.get('/posts').then(response => {\n      const posts = response.data.slice(0, 4);\n      const updatedPosts = posts.map(post => {\n        return _objectSpread({}, post, {\n          author: 'Max'\n        });\n      });\n      this.setState({\n        posts: updatedPosts\n      });\n    }).catch(error => {\n      // this.setState({ error: true })\n      console.log(error);\n    });\n  }\n\n  render() {\n    let posts = React.createElement(\"p\", {\n      style: {\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Somethings went wrong!\");\n    if (!this.state.error) posts = this.state.posts.map(post => {\n      return React.createElement(Post, {\n        key: post.id,\n        title: post.title,\n        author: post.author,\n        clicked: () => this.postSelectedHandler(post.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      });\n    });\n    return React.createElement(\"section\", {\n      className: \"Posts\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, posts);\n  }\n\n}\n\nexport default Posts;","map":{"version":3,"sources":["/home/mojtaba/Desktop/Burgur_Builder/burgur_builder/src/containers/Blog/Posts/Posts.js"],"names":["React","Component","axios","post","Posts","state","posts","selectedPostId","postSelectedHandler","id","setState","componentDidMount","get","then","response","data","slice","updatedPosts","map","author","catch","error","console","log","render","textAlign","title"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,IAAP,MAAiB,+BAAjB;AACA,OAAO,OAAP;;AACA,MAAMC,KAAN,CAAY;AAAA;AAAA,SACRC,KADQ,GACA;AACJC,MAAAA,KAAK,EAAE,EADH;AAEJC,MAAAA,cAAc,EAAE;AAFZ,KADA;;AAAA,SAKRC,mBALQ,GAKeC,EAAD,IAAQ;AAC1B,WAAKC,QAAL,CAAc;AAAEH,QAAAA,cAAc,EAAEE;AAAlB,OAAd;AACH,KAPO;AAAA;;AASRE,EAAAA,iBAAiB,GAAG;AAChB,UAAML,KAAK,GAAGJ,KAAK,CAACU,GAAN,CAAU,QAAV,EACTC,IADS,CACJC,QAAQ,IAAI;AACd,YAAMR,KAAK,GAAGQ,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoB,CAApB,EAAuB,CAAvB,CAAd;AACA,YAAMC,YAAY,GAAGX,KAAK,CAACY,GAAN,CAAUf,IAAI,IAAI;AACnC,iCACOA,IADP;AAEIgB,UAAAA,MAAM,EAAE;AAFZ;AAIH,OALoB,CAArB;AAMA,WAAKT,QAAL,CAAc;AACVJ,QAAAA,KAAK,EAAEW;AADG,OAAd;AAGH,KAZS,EAYPG,KAZO,CAYAC,KAAD,IAAW;AAChB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,KAfS,CAAd;AAgBH;;AAEDG,EAAAA,MAAM,GAAE;AACJ,QAAIlB,KAAK,GAAG;AAAG,MAAA,KAAK,EAAE;AAAEmB,QAAAA,SAAS,EAAE;AAAb,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAZ;AACA,QAAI,CAAC,KAAKpB,KAAL,CAAWgB,KAAhB,EACIf,KAAK,GAAG,KAAKD,KAAL,CAAWC,KAAX,CAAiBY,GAAjB,CAAqBf,IAAI,IAAI;AACjC,aAAO,oBAAC,IAAD;AACH,QAAA,GAAG,EAAEA,IAAI,CAACM,EADP;AAEH,QAAA,KAAK,EAAEN,IAAI,CAACuB,KAFT;AAGH,QAAA,MAAM,EAAEvB,IAAI,CAACgB,MAHV;AAIH,QAAA,OAAO,EAAE,MAAM,KAAKX,mBAAL,CAAyBL,IAAI,CAACM,EAA9B,CAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAKH,KANO,CAAR;AAQJ,WACI;AAAS,MAAA,SAAS,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKH,KADL,CADJ;AAKH;;AA5CO;;AA+CZ,eAAeF,KAAf","sourcesContent":["import React ,{Component} from 'react';\nimport axios from '../../../axios';\nimport post from '../../../components/Post/Post'\nimport './Pos'\nclass Posts {\n    state = {\n        posts: [],\n        selectedPostId: null,\n    }\n    postSelectedHandler = (id) => {\n        this.setState({ selectedPostId: id })\n    }\n\n    componentDidMount() {\n        const posts = axios.get('/posts')\n            .then(response => {\n                const posts = response.data.slice(0, 4);\n                const updatedPosts = posts.map(post => {\n                    return {\n                        ...post,\n                        author: 'Max',\n                    };\n                });\n                this.setState({\n                    posts: updatedPosts,\n                });\n            }).catch((error) => {\n                // this.setState({ error: true })\n                console.log(error);\n            });\n    }\n\n    render(){\n        let posts = <p style={{ textAlign: 'center' }}>Somethings went wrong!</p>\n        if (!this.state.error)\n            posts = this.state.posts.map(post => {\n                return <Post\n                    key={post.id}\n                    title={post.title}\n                    author={post.author}\n                    clicked={() => this.postSelectedHandler(post.id)} />;\n            });\n\n        return(\n            <section className=\"Posts\">\n                {posts}\n            </section>\n        );\n    };\n}\n\nexport default Posts;"]},"metadata":{},"sourceType":"module"}