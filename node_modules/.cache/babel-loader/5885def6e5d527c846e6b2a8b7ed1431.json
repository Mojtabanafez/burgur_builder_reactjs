{"ast":null,"code":"var _jsxFileName = \"/home/mojtaba/Desktop/Burgur_Builder/burgur_builder/src/containers/Checkout/Checkout.js\";\nimport React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\nimport ContactData from './ContactData/ContactData';\nimport { connect } from 'react-redux';\n\nclass Checkout extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.checkoutCancelledHandler = () => {\n      this.props.history.goBack();\n    };\n\n    this.checkoutContinueHandler = () => {\n      console.log(this.props);\n      this.props.history.replace('/checkout/contact-data');\n    };\n  }\n\n  render() {\n    console.log(\"[checkout] render\");\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(CheckoutSummary, {\n      ingredients: this.state.ingredients,\n      checkoutContinued: this.checkoutContinueHandler,\n      checkoutCancelled: this.checkoutCancelledHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: this.props.match.path + '/contact-data',\n      render: props => React.createElement(ContactData, Object.assign({\n        ingredients: this.state.ingredients,\n        price: this.state.price\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    ings: state.ingredients,\n    p\n  };\n};\n\nexport default Checkout;","map":{"version":3,"sources":["/home/mojtaba/Desktop/Burgur_Builder/burgur_builder/src/containers/Checkout/Checkout.js"],"names":["React","Component","Route","CheckoutSummary","ContactData","connect","Checkout","checkoutCancelledHandler","props","history","goBack","checkoutContinueHandler","console","log","replace","render","state","ingredients","match","path","price","mapStateToProps","ings","p"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,eAAP,MAA4B,wDAA5B;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AAEA,MAAMC,QAAN,SAAuBL,SAAvB,CAAiC;AAAA;AAAA;;AAAA,SAqB7BM,wBArB6B,GAqBF,MAAM;AAC7B,WAAKC,KAAL,CAAWC,OAAX,CAAmBC,MAAnB;AACH,KAvB4B;;AAAA,SAwB7BC,uBAxB6B,GAwBH,MAAM;AAC5BC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,KAAjB;AACA,WAAKA,KAAL,CAAWC,OAAX,CAAmBK,OAAnB,CAA2B,wBAA3B;AACH,KA3B4B;AAAA;;AA4B7BC,EAAAA,MAAM,GAAG;AACLH,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,eAAD;AACI,MAAA,WAAW,EAAE,KAAKG,KAAL,CAAWC,WAD5B;AAEI,MAAA,iBAAiB,EAAE,KAAKN,uBAF5B;AAGI,MAAA,iBAAiB,EAAE,KAAKJ,wBAH5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAKI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAE,KAAKC,KAAL,CAAWU,KAAX,CAAiBC,IAAjB,GAAwB,eAArC;AACI,MAAA,MAAM,EAAGX,KAAD,IAAY,oBAAC,WAAD;AAAa,QAAA,WAAW,EAAE,KAAKQ,KAAL,CAAWC,WAArC;AAAkD,QAAA,KAAK,EAAE,KAAKD,KAAL,CAAWI;AAApE,SAA+EZ,KAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,CADJ;AAUH;;AAxC4B;;AA2CjC,MAAMa,eAAe,GAAGL,KAAK,IAAI;AAC7B,SAAO;AACHM,IAAAA,IAAI,EAACN,KAAK,CAACC,WADR;AAEHM,IAAAA;AAFG,GAAP;AAIH,CALD;;AAOA,eAAejB,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\nimport ContactData from './ContactData/ContactData';\nimport {connect} from 'react-redux'\n\nclass Checkout extends Component {\n    // state = {\n    //     ingredients: null,\n    //     price:0,\n    // };\n    // componentWillMount() {\n    //     const query = new URLSearchParams(this.props.location.search);\n    //     const ingredients = {};\n    //     let price=0;\n    //     for (let param of query.entries()) {\n    //         if (param[0] === 'price') {\n    //             price = param[1];\n    //         }else{\n    //             ingredients[param[0]] = +param[1];\n    //         }\n    //     }\n    //     this.setState({\n    //         price: price,\n    //         ingredients: ingredients\n    //     });\n    // }\n    checkoutCancelledHandler = () => {\n        this.props.history.goBack();\n    }\n    checkoutContinueHandler = () => {\n        console.log(this.props);\n        this.props.history.replace('/checkout/contact-data');\n    }\n    render() {\n        console.log(\"[checkout] render\");\n        return (\n            <div>\n                <CheckoutSummary\n                    ingredients={this.state.ingredients}\n                    checkoutContinued={this.checkoutContinueHandler}\n                    checkoutCancelled={this.checkoutCancelledHandler} />\n                <Route path={this.props.match.path + '/contact-data'}\n                    render={(props) => (<ContactData ingredients={this.state.ingredients} price={this.state.price} {...props}/>)} />\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        ings:state.ingredients,\n        p\n    }\n}\n\nexport default Checkout;"]},"metadata":{},"sourceType":"module"}